Tabla2 <- data.frame(VariableA <- c("A", "B", "C", "C", "A"),
VariableB <- c("Uno", "Tres", "Uno", "Dos", "Uno"),
VariableC <- c(34, 21, 32, 23, 21, 23))
Tabla2 <- data.frame(VariableA <- c("A", "B", "C", "C", "A"),
VariableB <- c("Uno", "Tres", "Uno", "Dos", "Uno"),
VariableC <- c(34, 21, 32, 23, 21))
# Creación de Variable Numérica
un_valor <- 5
dos_o_mas <- c(1, 4, 7)
# Crear Tabla
tabla1 <- data.frame(
VariableA = "A",
VariableB = "B",
VariableC = 1
)
tabla2 <- data.frame(
VariableA = c("A", "B", "C", "C", "A"),
VariableB = c("Uno", "Tres", "Uno", "Dos", "Uno"),
VariableC = c(34, 21, 32, 23, 21)
)
write.csv(tabla2, "Tabla2.csv")
TablaNueva <- read.csv("Tabla2.csv")
# Define custom CSS to set the background color
custom_css <- "
.language-tabset {
background-color: blue;
}
"
calcular_poblacion(Nt, B, D, I, E)
calcular_poblacion <- function(Nt, B, D, I, E) {
Nt2 <- Nt + B - D + I - E)
calcular_poblacion <- function(Nt, B, D, I, E) {
Nt2 <- Nt + B - D + I - E)
calcular_poblacion <- function(Nt, B, D, I, E) {
Nt2 = Nt + B - D + I - E)
calcular_poblacion <- function(Nt, B, D, I, E) {
Nt2 = Nt + B - D + I - E
return(Nt2)
}
Nt = 1000
B = 50
D = 30
I = 10
E = 15
calcular_poblacion(Nt, B, D, I, E)
calcular_poblacion <- function(Nt, B, D) {
Nt2 = Nt + B - D
return(Nt2)
}
# Uso de la función
Nt = 2000
B = 200
D = 300
calcular_poblacion(Nt, B, D)
calcular_poblacion <- function(Nt, f) {
Nt2 = Nt * f
return(Nt2)
}
Nt = 2000
f = 5.5
calcular_poblacion(Nt, f)
Nt = 2000
f = 1.2
calcular_poblacion(Nt, f)
calcular_poblacion <- function(Nt, R) {
Nt2 = Nt * R
return(Nt2)
}
Nt = 2000
R = 1.2
calcular_poblacion(Nt, R)
calcular_poblacion(Nt, R)
R = 0.8
calcular_poblacion(Nt, R)
calcular_poblacion <- function(Nt, R, t) {
Nt2 = Nt * R^t
return(Nt2)
}
Nt = 2000
R = 1.2
t = 5
calcular_poblacion(Nt, R)
calcular_poblacion(Nt, R, t)
R = 0.8
calcular_poblacion(Nt, R, t)
Nt = 540
R = 1.15
t= 50
calcular_poblacion(Nt = 540, R= 1.15, t = c(1:50))
Poblacion <- calcular_poblacion(Nt = 540, R= 1.15, t = c(1:50))
Years <- 1:50
Datos <- data.frame(Years = Years,
Poblacion = Poblacion)
library(tidyverse)
ggplot(data= Datos, aes(x= Years, y= Poblacion))+
geom_point()
ggplot(data= Datos, aes(x= Years, y= Poblacion))+
geom_point() +
theme_classic()
# Crear datos de muestra
x <- c(10, 15, 20, 25, 30)  # valores de x
a <- c(5000, 5000, 4700, 5300)       # valores de a
Den1 <- function(x, a){
D = sum(x) / sum(a)
print(Den1)
}
Den1(x, a)
# Crear datos de muestra
x <- c(10, 15, 20, 25, 30)  # valores de x
a <- c(5000, 5000, 4700, 5300)       # valores de a
Den1 <- function(x, a){
D = sum(x) / sum(a)
print(Den1)
}
Den1(x = x, a = a)
# Crear datos de muestra
x <- c(10, 15, 20, 25, 30)  # valores de x
a <- c(5000, 5000, 4700, 5300)       # valores de a
Den1 <- function(x, a){
D = sum(x) / sum(a)
print(Den1)
}
Den1(x = x, a = a)
Den1 <- function(x, a){
D = sum(x) / sum(a)
print(D)
}
Den1(x = x, a = a)
Den1 <- function(x, a){
D = sum(x) / sum(a)
print(D)paste("inv/m^2")
Den1 <- function(x, a) {
D <- sum(x) / sum(a)
cat(D, "inv/m^2\n")
}
Den1(x = x, a = a)
Den1 <- function(x, a) {
D <- sum(x) / sum(a)
cat(D, expression("inv/m^2"), "\n")
}
Den1(x = x, a = a)
Den1 <- function(x, a) {
D <- sum(x) / sum(a)
cat(D, "inv/m^2\n")
}
Den1(x = x, a = a)
cat(D, "inv/metro cuadrado")
Den1 <- function(x, a) {
D <- sum(x) / sum(a)
cat(D, "inv/metro cuadrado")
}
Den1(x = x, a = a)
N = 0.005 * 100000
N
Abundancia <- function(A, x, L, w, ns){
N = A * sum(x)/ 2*L*w*ns
print(N)
}
x = c(4,3,3,2,3)
A = 2
L = 0.1
w = 0.01
ns = 5
Abundancia(x =x, A =A, L= L, w=w, ns= ns)
Abundancia(x =15, A =A, L= L, w=w, ns= ns)
Abundancia <- function(A, x, L, w, ns){
N = (A * sum(x))/ 2*L*w*ns
print(N)
}
x = c(4,3,3,2,3)
A = 2
L = 0.1
w = 0.01
ns = 5
Abundancia(x =15, A =A, L= L, w=w, ns= ns)
Abundancia <- function(A, x, L, w, ns){
N = (A * sum(x))/ (2*L*w*ns)
print(N)
}
Abundancia(x =15, A =A, L= L, w=w, ns= ns)
Abundancia(x =x, A =A, L= L, w=w, ns= ns)
Varianza <- function(nt, ns, s2x){
s = (nt^2/ns) * s2x * (1 - (ns / nt))
print(s)
}
Varianza1 <- function(x, ns ){
s2x = (sum(x) - (sum(x)^2/ns)) / (ns -1)
}
s2x <- Varianza1(x= x, ns= ns)
s2x
s2x
Varianza1 <- function(x, ns ){
s2x = (sum(x) - (sum(x)^2/ns)) / (ns -1)
print(s2x)
}
s2x <- Varianza1(x= x, ns= ns)
Varianza1 <- function(x, ns ){
s2x = (sum(x^2) - (sum(x)^2/ns)) / (ns -1)
print(s2x)
}
s2x <- Varianza1(x= x, ns= ns)
s2x
Varianza <- function(nt, ns, s2x){
s = (nt^2/ns) * s2x * (1 - (ns / nt))
print(s)
}
nt= 1000
Varianza(nt = nt, ns = ns, s2x = s2x )
Varianza <- function(nt, ns, s2x){
s = (nt^2/ns) * s2x
print(s)
}
nt= 1000
Varianza(nt = nt, ns = ns, s2x = s2x )
ES <- function(Varianza){
ES = sqrt(Varianza)
print(ES)
}
ES(100000)
IC95 <- function(N, t, ES){
IC95low = N - t*ES
IC95high = N + t*ES
print(IC95low : IC95high)
}
IC95(N = 3000, t= 2.776, ES= ES)
IC95 <- function(N, t, ES){
IC95low = N - t*ES
IC95high = N + t*ES
}
IC95(N = 3000, t= 2.776, ES= ES)
IC95 <- function(N, t, ES) {
IC95low = N - t * ES
IC95high = N + t * ES
print(c(IC95low, IC95high))
}
IC95(N = 3000, t= 2.776, ES= ES)
ES <- function(Varianza){
ES = sqrt(Varianza)
print(ES)
}
ES(100000)
IC95(N = 3000, t= 2.776, ES= 316.2278)
